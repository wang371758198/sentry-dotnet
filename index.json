{
  "api/Sentry.Infrastructure.html": {
    "href": "api/Sentry.Infrastructure.html",
    "title": "Namespace Sentry.Infrastructure | Sentry .NET",
    "keywords": "Namespace Sentry.Infrastructure Classes ConsoleDiagnosticLogger Console logger used by the SDK to report its internal logging SystemClock Implementation of ISystemClock to help testability Interfaces ISystemClock An abstraction to the system clock"
  },
  "api/Sentry.Infrastructure.SystemClock.html": {
    "href": "api/Sentry.Infrastructure.SystemClock.html",
    "title": "Class SystemClock | Sentry .NET",
    "keywords": "Class SystemClock Implementation of ISystemClock to help testability Inheritance Object SystemClock Implements ISystemClock Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Infrastructure Assembly : Sentry.dll Syntax public sealed class SystemClock : ISystemClock Fields | Improve this Doc View Source Clock System clock singleton Declaration public static readonly SystemClock Clock Field Value Type Description SystemClock Methods | Improve this Doc View Source GetUtcNow() Gets the current time in UTC. Declaration public DateTimeOffset GetUtcNow() Returns Type Description DateTimeOffset Remarks Used for testability, calls: DateTimeOffset.UtcNow Implements ISystemClock See Also ISystemClock"
  },
  "api/Sentry.IHub.html": {
    "href": "api/Sentry.IHub.html",
    "title": "Interface IHub | Sentry .NET",
    "keywords": "Interface IHub SDK API contract which combines a client and scope management Inherited Members ISentryClient.IsEnabled ISentryClient.CaptureEvent(SentryEvent, Scope) ISentryScopeManager.ConfigureScope(Action<Scope>) ISentryScopeManager.ConfigureScopeAsync(Func<Scope, Task>) ISentryScopeManager.BindClient(ISentryClient) ISentryScopeManager.PushScope() ISentryScopeManager.PushScope<TState>(TState) Namespace : Sentry Assembly : Sentry.dll Syntax public interface IHub : ISentryClient, ISentryScopeManager Remarks The contract of which SentrySdk exposes statically. This interface exist to allow better testability of integrations which otherwise would require dependency to the static SentrySdk"
  },
  "api/Sentry.Extensions.Logging.SentryLoggerProvider.html": {
    "href": "api/Sentry.Extensions.Logging.SentryLoggerProvider.html",
    "title": "Class SentryLoggerProvider | Sentry .NET",
    "keywords": "Class SentryLoggerProvider Inheritance Object SentryLoggerProvider Implements ILoggerProvider IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax [ProviderAlias(\"Sentry\")] public class SentryLoggerProvider : ILoggerProvider, IDisposable Constructors | Improve this Doc View Source SentryLoggerProvider(IOptions<SentryLoggingOptions>) Declaration public SentryLoggerProvider(IOptions<SentryLoggingOptions> options) Parameters Type Name Description IOptions < SentryLoggingOptions > options Methods | Improve this Doc View Source CreateLogger(String) Declaration public ILogger CreateLogger(string categoryName) Parameters Type Name Description String categoryName Returns Type Description ILogger | Improve this Doc View Source Dispose() Declaration public void Dispose() Implements Microsoft.Extensions.Logging.ILoggerProvider System.IDisposable"
  },
  "api/Sentry.Extensions.Logging.MelDiagnosticLogger.html": {
    "href": "api/Sentry.Extensions.Logging.MelDiagnosticLogger.html",
    "title": "Class MelDiagnosticLogger | Sentry .NET",
    "keywords": "Class MelDiagnosticLogger MEL => Microsoft.Extensions.Logging Inheritance Object MelDiagnosticLogger Implements IDiagnosticLogger Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class MelDiagnosticLogger : IDiagnosticLogger Remarks Replaces the default Console logger as early as the logging factory is built Constructors | Improve this Doc View Source MelDiagnosticLogger(ILogger<ISentryClient>, SentryLevel) Declaration public MelDiagnosticLogger(ILogger<ISentryClient> logger, SentryLevel level) Parameters Type Name Description ILogger < ISentryClient > logger Sentry.Protocol.SentryLevel level Methods | Improve this Doc View Source IsEnabled(SentryLevel) Whether this logger is enabled for the provided level Declaration public bool IsEnabled(SentryLevel level) Parameters Type Name Description Sentry.Protocol.SentryLevel level Returns Type Description Boolean Remarks Enabled if the level is equal or higher than then both Sentry.Protocol.SentryLevel set via the options and also the inner ILogger<TCategoryName> | Improve this Doc View Source Log(SentryLevel, String, Exception, Object[]) Declaration public void Log(SentryLevel logLevel, string message, Exception exception = null, params object[] args) Parameters Type Name Description Sentry.Protocol.SentryLevel logLevel String message Exception exception Object [] args Implements IDiagnosticLogger"
  },
  "api/Sentry.Extensions.Logging.ILogEventFilter.html": {
    "href": "api/Sentry.Extensions.Logging.ILogEventFilter.html",
    "title": "Interface ILogEventFilter | Sentry .NET",
    "keywords": "Interface ILogEventFilter Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public interface ILogEventFilter Methods | Improve this Doc View Source Filter(String, LogLevel, EventId, Exception) Declaration bool Filter(string categoryName, LogLevel logLevel, EventId eventId, Exception exception) Parameters Type Name Description String categoryName LogLevel logLevel EventId eventId Exception exception Returns Type Description Boolean"
  },
  "api/Sentry.Extensibility.ITransport.html": {
    "href": "api/Sentry.Extensibility.ITransport.html",
    "title": "Interface ITransport | Sentry .NET",
    "keywords": "Interface ITransport An abstraction to the transport of the event Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public interface ITransport Methods | Improve this Doc View Source CaptureEventAsync(SentryEvent, CancellationToken) Sends the Sentry.SentryEvent to Sentry asynchronously Declaration Task CaptureEventAsync(SentryEvent event, CancellationToken cancellationToken = default(CancellationToken)) Parameters Type Name Description Sentry.SentryEvent event The event to send to Sentry. CancellationToken cancellationToken The cancellation token. Returns Type Description Task"
  },
  "api/Sentry.Extensibility.ISentryEventExceptionProcessor.html": {
    "href": "api/Sentry.Extensibility.ISentryEventExceptionProcessor.html",
    "title": "Interface ISentryEventExceptionProcessor | Sentry .NET",
    "keywords": "Interface ISentryEventExceptionProcessor Process exceptions and augments the event with its data Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public interface ISentryEventExceptionProcessor Methods | Improve this Doc View Source Process(Exception, SentryEvent) Process the exception and augments the event with its data. Declaration void Process(Exception exception, SentryEvent sentryEvent) Parameters Type Name Description Exception exception The exception to process. Sentry.SentryEvent sentryEvent The event to add data to."
  },
  "api/Sentry.Extensibility.IBackgroundWorker.html": {
    "href": "api/Sentry.Extensibility.IBackgroundWorker.html",
    "title": "Interface IBackgroundWorker | Sentry .NET",
    "keywords": "Interface IBackgroundWorker Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public interface IBackgroundWorker Properties | Improve this Doc View Source QueuedItems Declaration int QueuedItems { get; } Property Value Type Description Int32 Methods | Improve this Doc View Source EnqueueEvent(SentryEvent) Declaration bool EnqueueEvent(SentryEvent event) Parameters Type Name Description Sentry.SentryEvent event Returns Type Description Boolean"
  },
  "api/Sentry.AspNetCore.html": {
    "href": "api/Sentry.AspNetCore.html",
    "title": "Namespace Sentry.AspNetCore | Sentry .NET",
    "keywords": "Namespace Sentry.AspNetCore Classes BaseRequestPayloadExtractor DefaultRequestPayloadExtractor FormRequestPayloadExtractor SentryAspNetCoreOptions An options class for the ASP.NET Core Sentry integration Interfaces IRequestPayloadExtractor IUserFactory Sentry User Factory"
  },
  "api/Sentry.AspNetCore.DefaultRequestPayloadExtractor.html": {
    "href": "api/Sentry.AspNetCore.DefaultRequestPayloadExtractor.html",
    "title": "Class DefaultRequestPayloadExtractor | Sentry .NET",
    "keywords": "Class DefaultRequestPayloadExtractor Inheritance Object BaseRequestPayloadExtractor DefaultRequestPayloadExtractor Implements IRequestPayloadExtractor Inherited Members BaseRequestPayloadExtractor.ExtractPayload(HttpRequest) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class DefaultRequestPayloadExtractor : BaseRequestPayloadExtractor, IRequestPayloadExtractor Methods | Improve this Doc View Source DoExtractPayLoad(HttpRequest) Declaration protected override object DoExtractPayLoad(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Object Overrides BaseRequestPayloadExtractor.DoExtractPayLoad(HttpRequest) | Improve this Doc View Source IsSupported(HttpRequest) Declaration protected override bool IsSupported(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Boolean Overrides BaseRequestPayloadExtractor.IsSupported(HttpRequest) Implements IRequestPayloadExtractor"
  },
  "api/Sentry.Extensibility.DisabledHub.html": {
    "href": "api/Sentry.Extensibility.DisabledHub.html",
    "title": "Class DisabledHub | Sentry .NET",
    "keywords": "Class DisabledHub Inheritance Object DisabledHub Implements IHub ISentryClient ISentryScopeManager IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public class DisabledHub : IHub, ISentryClient, ISentryScopeManager, IDisposable Fields | Improve this Doc View Source Instance Declaration public static DisabledHub Instance Field Value Type Description DisabledHub Properties | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source BindClient(ISentryClient) Declaration public void BindClient(ISentryClient client) Parameters Type Name Description ISentryClient client | Improve this Doc View Source CaptureEvent(SentryEvent, Scope) Declaration public Guid CaptureEvent(SentryEvent evt, Scope scope = null) Parameters Type Name Description Sentry.SentryEvent evt Sentry.Protocol.Scope scope Returns Type Description Guid | Improve this Doc View Source ConfigureScope(Action<Scope>) Declaration public void ConfigureScope(Action<Scope> configureScope) Parameters Type Name Description Action < Sentry.Protocol.Scope > configureScope | Improve this Doc View Source ConfigureScopeAsync(Func<Scope, Task>) Declaration public Task ConfigureScopeAsync(Func<Scope, Task> configureScope) Parameters Type Name Description Func < Sentry.Protocol.Scope , Task > configureScope Returns Type Description Task | Improve this Doc View Source Dispose() Declaration public void Dispose() | Improve this Doc View Source PushScope() Declaration public IDisposable PushScope() Returns Type Description IDisposable | Improve this Doc View Source PushScope<TState>(TState) Declaration public IDisposable PushScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState Implements IHub ISentryClient ISentryScopeManager System.IDisposable"
  },
  "api/Sentry.AspNetCore.SentryAspNetCoreOptions.html": {
    "href": "api/Sentry.AspNetCore.SentryAspNetCoreOptions.html",
    "title": "Class SentryAspNetCoreOptions | Sentry .NET",
    "keywords": "Class SentryAspNetCoreOptions An options class for the ASP.NET Core Sentry integration Inheritance Object SentryOptions SentryLoggingOptions SentryAspNetCoreOptions Implements Sentry.Protocol.IScopeOptions Inherited Members SentryLoggingOptions.MinimumBreadcrumbLevel SentryLoggingOptions.MinimumEventLevel SentryLoggingOptions.Dsn SentryLoggingOptions.InitializeSdk SentryLoggingOptions.Filters SentryOptions.SendDefaultPii SentryOptions.AttachStacktrace SentryOptions.MaxBreadcrumbs SentryOptions.SampleRate SentryOptions.Release SentryOptions.Environment SentryOptions.BeforeSend SentryOptions.MaxQueueItems SentryOptions.ShutdownTimeout SentryOptions.DecompressionMethods SentryOptions.RequestBodyCompressionLevel SentryOptions.RequestBodyCompressionBuffered SentryOptions.HttpProxy SentryOptions.ConfigureHandler SentryOptions.ConfigureClient SentryOptions.Debug SentryOptions.DiagnosticsLevel SentryOptions.DiagnosticLogger Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class SentryAspNetCoreOptions : SentryLoggingOptions, IScopeOptions Properties | Improve this Doc View Source IncludeActivityData Gets or sets a value indicating whether [include System.Diagnostic.Activity data] to events. Declaration public bool IncludeActivityData { get; set; } Property Value Type Description Boolean true if [include activity data]; otherwise, false . See Also https://github.com/dotnet/corefx/blob/master/src/System.Diagnostics.DiagnosticSource/src/ActivityUserGuide.md | Improve this Doc View Source IncludeRequestPayload Gets or sets a value indicating whether to [include the request payload]. Declaration public bool IncludeRequestPayload { get; set; } Property Value Type Description Boolean true if [the request payload shall be included in events]; otherwise, false . Implements Sentry.Protocol.IScopeOptions"
  },
  "api/Sentry.AspNetCore.IRequestPayloadExtractor.html": {
    "href": "api/Sentry.AspNetCore.IRequestPayloadExtractor.html",
    "title": "Interface IRequestPayloadExtractor | Sentry .NET",
    "keywords": "Interface IRequestPayloadExtractor Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public interface IRequestPayloadExtractor Methods | Improve this Doc View Source ExtractPayload(HttpRequest) Declaration object ExtractPayload(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Object"
  },
  "index.html": {
    "href": "index.html",
    "title": "Sentry for .NET | Sentry .NET",
    "keywords": "Sentry for .NET This documentation will help you get started with integrating Sentry with your .NET application. Refer to the manual to get started and learn about concepts. The reference API documentation includes any public member of this SDK. Many of which include useful see also sections and links to external documentation, for example, on sentry.io . Want to see some actual code? The SDK is developed on GitHub . Feedback We'd love to hear your feedback. You can also engage with us via the following channels:"
  },
  "manual/testing.html": {
    "href": "manual/testing.html",
    "title": "| Sentry .NET",
    "keywords": "We often don't want to couple our code with static class like SentrySdk , especially to allow our code to be testable. If that's your case, you can use 2 abstractions: ISentryClient IHub The ISentryClient is responsible to queueing the event to be sent to Sentry and abstracting away the internal transport. The IHub on the other hand, holds a client and the current scope. It in fact also implements ISentryClient and is able to dispatch calls to the right client depending on the current scope. In order to allow different events hold different contextual data, you need to know in which scope you are in. That's the job of the Hub . It holds the scope management as well as a client. If all you are doing is sending events, without modification/access to the current scope, then you depend on ISentryClient . If on the other hand you would like to have access to the current scope by configuring it or binding a different client to it, etc. You'd depend on IHub . An example using IHub for testability is SentryLogger and its unit tests SentryLoggerTests . SentryLogger depends on IHub because it does modify the scope (through AddBreadcrumb ). In case it only sent events, it should instead depend on ISentryClient"
  },
  "manual/getting-started.html": {
    "href": "manual/getting-started.html",
    "title": "Getting started | Sentry .NET",
    "keywords": "Getting started It's possible to simply import a single NuGet package and integrate Sentry with pretty much any .NET application. That is not necessarily the easiest way. Sentry provides multiple integrations , for specific types of applications. It's advised to look for an integration that best fits your application. Main concepts: Sentry Client The SentryClient is used to send events to Sentry. It has only synchronous methods because all its operations are executed in the calling thread without any I/O operation. Calling @Sentry.SentrySdk.CaptureException(Exception) will create a @Sentry.SentryEvent from the Exception provided. Internally, CaptureEvent(SentryEvent, Scope) is then called. Calling CaptureEvent(SentryEvent, Scope) will prepare the @Sentry.SentryEvent, applying the current @Sentry.Protocol.Scope data to it if one exists. If any ISentryEventProcessor or ISentryEventExceptionProcessor was configured by you, those are invoked too. Finally, the event is put into a in-memory queue to be sent to Sentry. Scope management By default, any call to AddBreadcrumb or ConfigureScope will access the same shared scope throughout the app. Perhaps that is what you need, for example on a WPF, WinForms or Xamarin app where a single user is using it. Or maybe you are building a ASP.NET application in which case you would prefer to create a new scope per request , ensuring that data in any single scope relates to a single request. The scope feature is leveraged by the ASP.NET Core integration for exactly this reason. It isolates data from each request so in case an event happens, only relevant data is sent to Sentry. This means you don't need to dig through logs with correlation ids in order to find the data relevant to you. Please check the manual for more."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "API | Sentry .NET",
    "keywords": "API Welcome to the API documentation of the Sentry .NET SDK. Acquisition This documentation include types which are part of different NuGet packages provided by Sentry . When visualizing a type, the documentation includes the name of the Assembly which contains that type. Assembly names are equal to the NuGet package that contains the assembly. For example, the @Sentry.Dsn class mentions: Assembly: Sentry.dll This means the type resides in the NuGet package Sentry Looking at SentryLoggerProvider you'll notice: Assembly: Sentry.Extensions.Logging.dll That assembly is found on NuGet Sentry.Extensions.Logging"
  },
  "manual/manual.html": {
    "href": "manual/manual.html",
    "title": "Manual | Sentry .NET",
    "keywords": "Manual Besides the examples documented here, you can refer to samples on GitHub . These are complete samples which you can run with a debugger to see how the SDK works. Static use The SDK provides a static entry point class called SentrySdk . Initialize the SDK @SentrySdk.Init Once the SDK is initialized, unhandled exceptions will automatically be captured and sent to Sentry. More context can be added, for example, breadcrumbs: SentrySdk.AddBreadcrumb(\"User accepted TOC\"); By default, the last 100 breadcrumbs are kept. This is configurable alongside many other settings via a parameter to the Init method. Breadcrumbs are attached to the scope. See further to understand Scopes. Scope management The scope is a lightweight object that exists in memory since the SDK is initialized. It can be used to augment events sent to Sentry. When the SDK is initialized, an empty Scope is already put in memory. That can be modified by you so that any event sent, regardless from where they are sent (e.g: a Logger integration that you configured) will include that scope data. You can create new scopes, which will clone the previous but will be totally isolated from it. The scope can be configured through: SentrySdk.ConfigureScope(scope => { scope.SetTag(\"Example\", \"Sentry docs\"); } There's also an asynchronous version if you need to do some I/O or run other TPL based work in order to retrieve the value to modify the scope: await SentrySdk.ConfigureScopeAsync(async scope => { // Anonymous object containing user retrieved from the DB scope.SetExtra(\"SomeExtraInfo\", new { Data = \"Value fetched asynchronously\", User = await _repository.GetUserId(id); }); }); ConfigureScope and ConfigureScopeAsync can be called as many times as you need. It'll invoke your callback with the current scope, allowing you to modify it further. To push a new scope into the stack and isolate any modifications from other scope, you can call: PushScope and call Dispose to drop it. using (SentrySdk.PushScope()) { SentrySdk.ConfigureScope(s => s.User = new User(\"name\")); Work(); // If an event happens inside this method, the user set above is sent with it. } // Disposed the scope above, User is no longer in the scope! Release The Sentry release feature (see Sentry docs to learn about it ) requires the SDK to send the actual application release number. That is done via the SentryEvent property called Release . Automatically discovering release version The SDK attempts to locate the release and add that to every event sent out to Sentry. Default values like 1.0 or 1.0.0.0 are ignored . It will firstly look at the entry assembly's AssemblyInformationalVersionAttribute , which accepts a string as value as is often used to set the GIT commit hash. If that returns null, it'll look at the default AssemblyVersionAttribute which accepts the numeric version number. When creating a project with Visual Studio, usually that includes version 1.0.0.0 . Since that usually means that the version is either not being set, or is set via a different method. The automatic version detection will disregard this value and no Release will be reported automatically."
  },
  "manual/log4net.html": {
    "href": "manual/log4net.html",
    "title": "Installing the integration on your app | Sentry .NET",
    "keywords": "Installing the integration on your app Using NuGet: Install-Package Sentry.Log4Net Or using the .NET Core CLI: dotnet add Sentry.Log4Net Configuration Once the log4net integration package is installed on your project, you can modify your configuration file to add the appender. This can be done, for example, via the app.config or web.config in case of ASP.NET. <appender name=\"SentryAppender\" type=\"Sentry.Log4Net.SentryAppender, Sentry.Log4Net\"> <Dsn value=\"dsn\"/> <!--Sends the log event Identity value as the user--> <SendIdentity value=\"true\" /> <threshold value=\"INFO\" /> </appender> For how it's done in this sample, please refer to sample app.config . The example above defines the DSN so that the SentryAppender is able to initialize the SDK. This is only one of the options. If you wish to configure the SDK manually in the app before creating the logging integration, you could leave the DSN out of the log4net configuration file and call: SentrySdk.Init(\"DSN\"); One of the advantages of this approach is that you can pass multiple configurations via the Init method. Bottom line is that the SDK needs to be initialized only once so you can choose where the initialization will happen. Other integrations (like ASP.NET) also is able to initialize the SDK. Make sure you pass the DSN to only one of these integrations, or if you are calling Init by yourself, there's no need to pass the DSN to the integration. Please refer to the sample to see it in action."
  },
  "api/Sentry.Extensibility.HubAdapter.html": {
    "href": "api/Sentry.Extensibility.HubAdapter.html",
    "title": "Class HubAdapter | Sentry .NET",
    "keywords": "Class HubAdapter An implementation of IHub which forwards any call to SentrySdk Inheritance Object HubAdapter Implements IHub ISentryClient ISentryScopeManager Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public sealed class HubAdapter : IHub, ISentryClient, ISentryScopeManager Remarks Allows testing classes which otherwise would need to depend on static SentrySdk by having them depend on IHub instead, which can be mocked. Fields | Improve this Doc View Source Instance The single instance which forwards all calls to SentrySdk Declaration public static readonly HubAdapter Instance Field Value Type Description HubAdapter Properties | Improve this Doc View Source IsEnabled Declaration public bool IsEnabled { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AddBreadcrumb(String, String, String, IDictionary<String, String>, BreadcrumbLevel) Declaration public void AddBreadcrumb(string message, string category = null, string type = null, IDictionary<string, string> data = null, BreadcrumbLevel level = BreadcrumbLevel.Info) Parameters Type Name Description String message String category String type IDictionary < String , String > data Sentry.Protocol.BreadcrumbLevel level | Improve this Doc View Source BindClient(ISentryClient) Declaration public void BindClient(ISentryClient client) Parameters Type Name Description ISentryClient client | Improve this Doc View Source CaptureEvent(SentryEvent) Declaration public Guid CaptureEvent(SentryEvent evt) Parameters Type Name Description Sentry.SentryEvent evt Returns Type Description Guid | Improve this Doc View Source CaptureException(Exception) Declaration public Guid CaptureException(Exception exception) Parameters Type Name Description Exception exception Returns Type Description Guid | Improve this Doc View Source ConfigureScope(Action<Scope>) Declaration public void ConfigureScope(Action<Scope> configureScope) Parameters Type Name Description Action < Sentry.Protocol.Scope > configureScope | Improve this Doc View Source ConfigureScopeAsync(Func<Scope, Task>) Declaration public Task ConfigureScopeAsync(Func<Scope, Task> configureScope) Parameters Type Name Description Func < Sentry.Protocol.Scope , Task > configureScope Returns Type Description Task | Improve this Doc View Source PushScope() Declaration public IDisposable PushScope() Returns Type Description IDisposable | Improve this Doc View Source PushScope<TState>(TState) Declaration public IDisposable PushScope<TState>(TState state) Parameters Type Name Description TState state Returns Type Description IDisposable Type Parameters Name Description TState Implements IHub ISentryClient ISentryScopeManager"
  },
  "api/Sentry.DsnAttribute.html": {
    "href": "api/Sentry.DsnAttribute.html",
    "title": "Class DsnAttribute | Sentry .NET",
    "keywords": "Class DsnAttribute A way to configure the DSN via attribute defined at the entry-assembly Inheritance Object Attribute DsnAttribute Inherited Members Attribute.Equals(Object) Attribute.GetCustomAttribute(Assembly, Type) Attribute.GetCustomAttribute(Assembly, Type, Boolean) Attribute.GetCustomAttribute(MemberInfo, Type) Attribute.GetCustomAttribute(MemberInfo, Type, Boolean) Attribute.GetCustomAttribute(Module, Type) Attribute.GetCustomAttribute(Module, Type, Boolean) Attribute.GetCustomAttribute(ParameterInfo, Type) Attribute.GetCustomAttribute(ParameterInfo, Type, Boolean) Attribute.GetCustomAttributes(Assembly) Attribute.GetCustomAttributes(Assembly, Boolean) Attribute.GetCustomAttributes(Assembly, Type) Attribute.GetCustomAttributes(Assembly, Type, Boolean) Attribute.GetCustomAttributes(MemberInfo) Attribute.GetCustomAttributes(MemberInfo, Boolean) Attribute.GetCustomAttributes(MemberInfo, Type) Attribute.GetCustomAttributes(MemberInfo, Type, Boolean) Attribute.GetCustomAttributes(Module) Attribute.GetCustomAttributes(Module, Boolean) Attribute.GetCustomAttributes(Module, Type) Attribute.GetCustomAttributes(Module, Type, Boolean) Attribute.GetCustomAttributes(ParameterInfo) Attribute.GetCustomAttributes(ParameterInfo, Boolean) Attribute.GetCustomAttributes(ParameterInfo, Type) Attribute.GetCustomAttributes(ParameterInfo, Type, Boolean) Attribute.GetHashCode() Attribute.IsDefaultAttribute() Attribute.IsDefined(Assembly, Type) Attribute.IsDefined(Assembly, Type, Boolean) Attribute.IsDefined(MemberInfo, Type) Attribute.IsDefined(MemberInfo, Type, Boolean) Attribute.IsDefined(Module, Type) Attribute.IsDefined(Module, Type, Boolean) Attribute.IsDefined(ParameterInfo, Type) Attribute.IsDefined(ParameterInfo, Type, Boolean) Attribute.Match(Object) Attribute.TypeId Object.Equals(Object, Object) Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry Assembly : Sentry.dll Syntax [AttributeUsage(AttributeTargets.Assembly)] public class DsnAttribute : Attribute Constructors | Improve this Doc View Source DsnAttribute(String) Creates a new instance of DsnAttribute Declaration public DsnAttribute(string dsn) Parameters Type Name Description String dsn Properties | Improve this Doc View Source Dsn The string DSN or empty string to turn the SDK off. Declaration public string Dsn { get; } Property Value Type Description String"
  },
  "api/Sentry.AspNetCore.IUserFactory.html": {
    "href": "api/Sentry.AspNetCore.IUserFactory.html",
    "title": "Interface IUserFactory | Sentry .NET",
    "keywords": "Interface IUserFactory Sentry User Factory Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public interface IUserFactory Methods | Improve this Doc View Source Create(HttpContext) Creates a Sentry.Protocol.User from the HttpContext Declaration User Create(HttpContext context) Parameters Type Name Description HttpContext context The HttpContext where the user resides Returns Type Description Sentry.Protocol.User The protocol user"
  },
  "api/Sentry.Extensibility.IDiagnosticLogger.html": {
    "href": "api/Sentry.Extensibility.IDiagnosticLogger.html",
    "title": "Interface IDiagnosticLogger | Sentry .NET",
    "keywords": "Interface IDiagnosticLogger Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public interface IDiagnosticLogger Methods | Improve this Doc View Source IsEnabled(SentryLevel) Declaration bool IsEnabled(SentryLevel level) Parameters Type Name Description Sentry.Protocol.SentryLevel level Returns Type Description Boolean | Improve this Doc View Source Log(SentryLevel, String, Exception, Object[]) Declaration void Log(SentryLevel logLevel, string message, Exception exception = null, params object[] args) Parameters Type Name Description Sentry.Protocol.SentryLevel logLevel String message Exception exception Object [] args"
  },
  "api/Sentry.AspNetCore.FormRequestPayloadExtractor.html": {
    "href": "api/Sentry.AspNetCore.FormRequestPayloadExtractor.html",
    "title": "Class FormRequestPayloadExtractor | Sentry .NET",
    "keywords": "Class FormRequestPayloadExtractor Inheritance Object BaseRequestPayloadExtractor FormRequestPayloadExtractor Implements IRequestPayloadExtractor Inherited Members BaseRequestPayloadExtractor.ExtractPayload(HttpRequest) Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public class FormRequestPayloadExtractor : BaseRequestPayloadExtractor, IRequestPayloadExtractor Methods | Improve this Doc View Source DoExtractPayLoad(HttpRequest) Declaration protected override object DoExtractPayLoad(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Object Overrides BaseRequestPayloadExtractor.DoExtractPayLoad(HttpRequest) | Improve this Doc View Source IsSupported(HttpRequest) Declaration protected override bool IsSupported(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Boolean Overrides BaseRequestPayloadExtractor.IsSupported(HttpRequest) Implements IRequestPayloadExtractor"
  },
  "api/Sentry.AspNetCore.BaseRequestPayloadExtractor.html": {
    "href": "api/Sentry.AspNetCore.BaseRequestPayloadExtractor.html",
    "title": "Class BaseRequestPayloadExtractor | Sentry .NET",
    "keywords": "Class BaseRequestPayloadExtractor Inheritance Object BaseRequestPayloadExtractor DefaultRequestPayloadExtractor FormRequestPayloadExtractor Implements IRequestPayloadExtractor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.AspNetCore Assembly : Sentry.AspNetCore.dll Syntax public abstract class BaseRequestPayloadExtractor : IRequestPayloadExtractor Methods | Improve this Doc View Source DoExtractPayLoad(HttpRequest) Declaration protected abstract object DoExtractPayLoad(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Object | Improve this Doc View Source ExtractPayload(HttpRequest) Declaration public object ExtractPayload(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Object | Improve this Doc View Source IsSupported(HttpRequest) Declaration protected abstract bool IsSupported(HttpRequest request) Parameters Type Name Description HttpRequest request Returns Type Description Boolean Implements IRequestPayloadExtractor"
  },
  "api/Sentry.Infrastructure.ISystemClock.html": {
    "href": "api/Sentry.Infrastructure.ISystemClock.html",
    "title": "Interface ISystemClock | Sentry .NET",
    "keywords": "Interface ISystemClock An abstraction to the system clock Namespace : Sentry.Infrastructure Assembly : Sentry.dll Syntax public interface ISystemClock Remarks Agree to disagree with closing this: https://github.com/aspnet/Common/issues/151 Methods | Improve this Doc View Source GetUtcNow() Gets the current time in UTC. Declaration DateTimeOffset GetUtcNow() Returns Type Description DateTimeOffset"
  },
  "api/Sentry.Infrastructure.ConsoleDiagnosticLogger.html": {
    "href": "api/Sentry.Infrastructure.ConsoleDiagnosticLogger.html",
    "title": "Class ConsoleDiagnosticLogger | Sentry .NET",
    "keywords": "Class ConsoleDiagnosticLogger Console logger used by the SDK to report its internal logging Inheritance Object ConsoleDiagnosticLogger Implements IDiagnosticLogger Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Infrastructure Assembly : Sentry.dll Syntax public class ConsoleDiagnosticLogger : IDiagnosticLogger Remarks The default logger, usually replaced by a higher level logging adapter like Microsoft.Extensions.Logging Constructors | Improve this Doc View Source ConsoleDiagnosticLogger(SentryLevel) Declaration public ConsoleDiagnosticLogger(SentryLevel minimalLevel) Parameters Type Name Description Sentry.Protocol.SentryLevel minimalLevel Methods | Improve this Doc View Source IsEnabled(SentryLevel) Whether the logger is enabled to the defined level. Declaration public bool IsEnabled(SentryLevel level) Parameters Type Name Description Sentry.Protocol.SentryLevel level Returns Type Description Boolean | Improve this Doc View Source Log(SentryLevel, String, Exception, Object[]) Log message with level, exception and parameters Declaration public void Log(SentryLevel logLevel, string message, Exception exception = null, params object[] args) Parameters Type Name Description Sentry.Protocol.SentryLevel logLevel String message Exception exception Object [] args Implements IDiagnosticLogger"
  },
  "api/Sentry.ISentryScopeManager.html": {
    "href": "api/Sentry.ISentryScopeManager.html",
    "title": "Interface ISentryScopeManager | Sentry .NET",
    "keywords": "Interface ISentryScopeManager Scope management Namespace : Sentry Assembly : Sentry.dll Syntax public interface ISentryScopeManager Remarks An implementation shall create new scopes and allow consumers modify the current scope Methods | Improve this Doc View Source BindClient(ISentryClient) Binds the client to the current scope. Declaration void BindClient(ISentryClient client) Parameters Type Name Description ISentryClient client The client. | Improve this Doc View Source ConfigureScope(Action<Scope>) Configures the current scope. Declaration void ConfigureScope(Action<Scope> configureScope) Parameters Type Name Description Action < Sentry.Protocol.Scope > configureScope The configure scope. | Improve this Doc View Source ConfigureScopeAsync(Func<Scope, Task>) Asynchronously configure the current scope. Declaration Task ConfigureScopeAsync(Func<Scope, Task> configureScope) Parameters Type Name Description Func < Sentry.Protocol.Scope , Task > configureScope The configure scope. Returns Type Description Task A task that completes when the callback is done or a completed task if the SDK is disabled. | Improve this Doc View Source PushScope() Pushes a new scope into the stack which is removed upon Dispose Declaration IDisposable PushScope() Returns Type Description IDisposable A disposable which removes the scope from the environment when invoked | Improve this Doc View Source PushScope<TState>(TState) Pushes a new scope into the stack which is removed upon Dispose Declaration IDisposable PushScope<TState>(TState state) Parameters Type Name Description TState state A state to associate with the scope Returns Type Description IDisposable A disposable which removes the scope from the environment when invoked Type Parameters Name Description TState"
  },
  "api/Sentry.ISentryClient.html": {
    "href": "api/Sentry.ISentryClient.html",
    "title": "Interface ISentryClient | Sentry .NET",
    "keywords": "Interface ISentryClient Sentry Client interface Namespace : Sentry Assembly : Sentry.dll Syntax public interface ISentryClient Properties | Improve this Doc View Source IsEnabled Whether the client is enabled or not Declaration bool IsEnabled { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source CaptureEvent(SentryEvent, Scope) Capture the event Declaration Guid CaptureEvent(SentryEvent evt, Scope scope = null) Parameters Type Name Description Sentry.SentryEvent evt The event to be captured Sentry.Protocol.Scope scope An optional scope to be applied to the event. Returns Type Description Guid The Id of the event"
  },
  "api/Sentry.SentryOptions.html": {
    "href": "api/Sentry.SentryOptions.html",
    "title": "Class SentryOptions | Sentry .NET",
    "keywords": "Class SentryOptions Sentry SDK options Inheritance Object SentryOptions SentryLoggingOptions Implements Sentry.Protocol.IScopeOptions Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry Assembly : Sentry.dll Syntax public class SentryOptions : IScopeOptions Constructors | Improve this Doc View Source SentryOptions() Creates a new instance of SentryOptions Declaration public SentryOptions() Properties | Improve this Doc View Source AttachStacktrace Whether to send the stack trace of a event captured without an exception Declaration public bool AttachStacktrace { get; set; } Property Value Type Description Boolean Remarks Append stack trace of the call to the SDK to capture a message or event without Exception | Improve this Doc View Source BeforeSend A callback to invoke before sending an event to Sentry Declaration public Func<SentryEvent, SentryEvent> BeforeSend { get; set; } Property Value Type Description Func < Sentry.SentryEvent , Sentry.SentryEvent > Remarks The return of this event will be sent to Sentry. This allows the application a chance to inspect and/or modify the event before it's sent. If the event should not be sent at all, return null from the callback. | Improve this Doc View Source ConfigureClient A callback invoked when a SentryClient is created. Declaration public Action<HttpClient, Dsn> ConfigureClient { get; set; } Property Value Type Description Action < HttpClient , Sentry.Dsn > | Improve this Doc View Source ConfigureHandler A callback invoked when a SentryClient is created. Declaration public Action<HttpClientHandler, Dsn> ConfigureHandler { get; set; } Property Value Type Description Action < HttpClientHandler , Sentry.Dsn > | Improve this Doc View Source Debug Whether to log diagnostics messages Declaration public bool Debug { get; set; } Property Value Type Description Boolean Remarks The verbosity can be controlled through DiagnosticsLevel and the implementation via DiagnosticLogger . | Improve this Doc View Source DecompressionMethods Decompression methods accepted Declaration public DecompressionMethods DecompressionMethods { get; set; } Property Value Type Description DecompressionMethods Remarks By default accepts all available compression methods supported by the platform | Improve this Doc View Source DiagnosticLogger The implementation of the logger. Declaration public IDiagnosticLogger DiagnosticLogger { get; set; } Property Value Type Description IDiagnosticLogger Remarks The Debug flag has to be switched on for this logger to be used at all. When debugging is turned off, this property is made null and any internal logging results in a no-op. | Improve this Doc View Source DiagnosticsLevel The diagnostics level to be used Declaration public SentryLevel DiagnosticsLevel { get; set; } Property Value Type Description Sentry.Protocol.SentryLevel Remarks The Debug flag has to be switched on for this setting to take effect. | Improve this Doc View Source Dsn The Data Source Name of a given project in Sentry. Declaration public Dsn Dsn { get; set; } Property Value Type Description Sentry.Dsn | Improve this Doc View Source Environment The environment the application is running Declaration public string Environment { get; set; } Property Value Type Description String Remarks This value can also be set via environment variable: SENTRY_ENVIRONMENT In some cases you don't need to set this manually since integrations, when possible, automatically fill this value. For ASP.NET Core which can read from IHostingEnvironment Examples Production, Staging See Also https://docs.sentry.io/learn/environments/ | Improve this Doc View Source HttpProxy An optional web proxy Declaration public IWebProxy HttpProxy { get; set; } Property Value Type Description IWebProxy | Improve this Doc View Source MaxBreadcrumbs Gets or sets the maximum breadcrumbs. Declaration public int MaxBreadcrumbs { get; set; } Property Value Type Description Int32 The maximum breadcrumbs per scope. Remarks When the number of events reach this configuration value, older breadcrumbs start dropping to make room for new ones. | Improve this Doc View Source MaxQueueItems The maximum number of events to keep while the worker attempts to send them Declaration public int MaxQueueItems { get; set; } Property Value Type Description Int32 | Improve this Doc View Source Release The release version of the application. Declaration public string Release { get; set; } Property Value Type Description String Remarks This value will generally be something along the lines of the git SHA for the given project. If not explicitly defined via configuration or environment variable (SENTRY_RELEASE). It will attempt o read it from: AssemblyInformationalVersionAttribute Don't rely on discovery if your release is: '1.0.0' or '0.0.0'. Since those are default values for new projects, they are not considered valid by the discovery process. Examples 721e41770371db95eee98ca2707686226b993eda 14.1.16.32451 See Also https://docs.sentry.io/learn/releases/ | Improve this Doc View Source RequestBodyCompressionBuffered Whether the body compression is buffered and the request 'Content-Length' known in advance. Declaration public bool RequestBodyCompressionBuffered { get; set; } Property Value Type Description Boolean Remarks Without reading through the Gzip stream to have its final size, it's no possible to use 'Content-Length' header value. That means 'Content-Encoding: chunked' has to be used which is sometimes not supported. Sentry on-premise without a reverse-proxy, for example, does not support 'chunked' requests. | Improve this Doc View Source RequestBodyCompressionLevel The level of which to compress the Sentry.SentryEvent before sending to Sentry Declaration public CompressionLevel RequestBodyCompressionLevel { get; set; } Property Value Type Description CompressionLevel Remarks To disable request body compression, use NoCompression | Improve this Doc View Source SampleRate Declaration public float? SampleRate { get; set; } Property Value Type Description Nullable < Single > | Improve this Doc View Source SendDefaultPii Whether to include default Personal Identifiable information Declaration public bool SendDefaultPii { get; set; } Property Value Type Description Boolean Remarks By default PII data like Username and Client IP address are not sent to Sentry. When this flag is turned on, default PII data like Cookies, Claims in Web applications and user data read from the request are sent. | Improve this Doc View Source ShutdownTimeout How long to wait for events to be sent before shutdown Declaration public TimeSpan ShutdownTimeout { get; set; } Property Value Type Description TimeSpan Remarks In case there are events queued when the SDK is closed, upper bound limit to wait for the worker to send the events to Sentry. Examples The SDK is closed while the queue has 1 event queued. The worker takes 50 milliseconds to send an event to Sentry. Even though default settings say 2 seconds, closing the SDK would block for 50ms. Implements Sentry.Protocol.IScopeOptions"
  },
  "api/Sentry.SentryClient.html": {
    "href": "api/Sentry.SentryClient.html",
    "title": "Class SentryClient | Sentry .NET",
    "keywords": "Class SentryClient Sentry client used to send events to Sentry Inheritance Object SentryClient Implements ISentryClient IDisposable Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry Assembly : Sentry.dll Syntax public class SentryClient : ISentryClient, IDisposable Remarks This client captures events by queueing those to its internal background worker which sends events to Sentry Constructors | Improve this Doc View Source SentryClient(SentryOptions) Creates a new instance of SentryClient Declaration public SentryClient(SentryOptions options) Parameters Type Name Description SentryOptions options The configuration for this client. Properties | Improve this Doc View Source IsEnabled Whether the client is enabled Declaration public bool IsEnabled { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source CaptureEvent(SentryEvent, Scope) Queues the event to be sent to Sentry Declaration public Guid CaptureEvent(SentryEvent event, Scope scope = null) Parameters Type Name Description Sentry.SentryEvent event The event to send to Sentry. Sentry.Protocol.Scope scope The optional scope to augment the event with. Returns Type Description Guid Remarks An optional scope, if provided, will be applied to the event. | Improve this Doc View Source Dispose() Disposes this client Declaration public void Dispose() Implements ISentryClient System.IDisposable"
  },
  "api/Sentry.Log4Net.html": {
    "href": "api/Sentry.Log4Net.html",
    "title": "Namespace Sentry.Log4Net | Sentry .NET",
    "keywords": "Namespace Sentry.Log4Net Classes SentryAppender"
  },
  "api/Sentry.Log4Net.SentryAppender.html": {
    "href": "api/Sentry.Log4Net.SentryAppender.html",
    "title": "Class SentryAppender | Sentry .NET",
    "keywords": "Class SentryAppender Inheritance Object log4net.Appender.AppenderSkeleton SentryAppender Implements log4net.Appender.IBulkAppender log4net.Appender.IAppender log4net.Core.IOptionHandler log4net.Appender.IFlushable Inherited Members log4net.Appender.AppenderSkeleton.ActivateOptions() log4net.Appender.AppenderSkeleton.Close() log4net.Appender.AppenderSkeleton.DoAppend(log4net.Core.LoggingEvent) log4net.Appender.AppenderSkeleton.DoAppend(log4net.Core.LoggingEvent[]) log4net.Appender.AppenderSkeleton.FilterEvent(log4net.Core.LoggingEvent) log4net.Appender.AppenderSkeleton.AddFilter(log4net.Filter.IFilter) log4net.Appender.AppenderSkeleton.ClearFilters() log4net.Appender.AppenderSkeleton.IsAsSevereAsThreshold(log4net.Core.Level) log4net.Appender.AppenderSkeleton.Append(log4net.Core.LoggingEvent[]) log4net.Appender.AppenderSkeleton.PreAppendCheck() log4net.Appender.AppenderSkeleton.RenderLoggingEvent(log4net.Core.LoggingEvent) log4net.Appender.AppenderSkeleton.RenderLoggingEvent(System.IO.TextWriter, log4net.Core.LoggingEvent) log4net.Appender.AppenderSkeleton.Flush(System.Int32) log4net.Appender.AppenderSkeleton.Threshold log4net.Appender.AppenderSkeleton.ErrorHandler log4net.Appender.AppenderSkeleton.FilterHead log4net.Appender.AppenderSkeleton.Layout log4net.Appender.AppenderSkeleton.Name log4net.Appender.AppenderSkeleton.RequiresLayout Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Log4Net Assembly : Sentry.Log4Net.dll Syntax public class SentryAppender : AppenderSkeleton, IBulkAppender, IAppender, IOptionHandler, IFlushable Constructors | Improve this Doc View Source SentryAppender() Declaration public SentryAppender() Properties | Improve this Doc View Source Dsn Declaration public string Dsn { get; set; } Property Value Type Description String | Improve this Doc View Source SendIdentity Declaration public bool SendIdentity { get; set; } Property Value Type Description Boolean Methods | Improve this Doc View Source Append(LoggingEvent) Declaration protected override void Append(LoggingEvent loggingEvent) Parameters Type Name Description log4net.Core.LoggingEvent loggingEvent Overrides log4net.Appender.AppenderSkeleton.Append(log4net.Core.LoggingEvent) | Improve this Doc View Source OnClose() Declaration protected override void OnClose() Overrides log4net.Appender.AppenderSkeleton.OnClose() Implements log4net.Appender.IBulkAppender log4net.Appender.IAppender log4net.Core.IOptionHandler log4net.Appender.IFlushable"
  },
  "api/Sentry.Http.html": {
    "href": "api/Sentry.Http.html",
    "title": "Namespace Sentry.Http | Sentry .NET",
    "keywords": "Namespace Sentry.Http Interfaces ISentryHttpClientFactory Sentry HttpClient factory"
  },
  "api/Sentry.Http.ISentryHttpClientFactory.html": {
    "href": "api/Sentry.Http.ISentryHttpClientFactory.html",
    "title": "Interface ISentryHttpClientFactory | Sentry .NET",
    "keywords": "Interface ISentryHttpClientFactory Sentry HttpClient factory Namespace : Sentry.Http Assembly : Sentry.dll Syntax public interface ISentryHttpClientFactory Methods | Improve this Doc View Source Create(Dsn, SentryOptions) Creates an HttpClient using the specified options. Declaration HttpClient Create(Dsn dsn, SentryOptions options) Parameters Type Name Description Sentry.Dsn dsn The DSN. SentryOptions options The options. Returns Type Description HttpClient HttpClient"
  },
  "api/Sentry.Extensions.Logging.html": {
    "href": "api/Sentry.Extensions.Logging.html",
    "title": "Namespace Sentry.Extensions.Logging | Sentry .NET",
    "keywords": "Namespace Sentry.Extensions.Logging Classes DelegateLogEventFilter MelDiagnosticLogger MEL => Microsoft.Extensions.Logging SentryLoggerProvider SentryLoggingOptions Sentry logging integration options Interfaces ILogEventFilter"
  },
  "api/Sentry.Extensions.Logging.DelegateLogEventFilter.html": {
    "href": "api/Sentry.Extensions.Logging.DelegateLogEventFilter.html",
    "title": "Class DelegateLogEventFilter | Sentry .NET",
    "keywords": "Class DelegateLogEventFilter Inheritance Object DelegateLogEventFilter Implements ILogEventFilter Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class DelegateLogEventFilter : ILogEventFilter Constructors | Improve this Doc View Source DelegateLogEventFilter(Func<String, LogLevel, EventId, Exception, Boolean>) Declaration public DelegateLogEventFilter(Func<string, LogLevel, EventId, Exception, bool> filter) Parameters Type Name Description Func < String , LogLevel , EventId , Exception , Boolean > filter Methods | Improve this Doc View Source Filter(String, LogLevel, EventId, Exception) Declaration public bool Filter(string categoryName, LogLevel logLevel, EventId eventId, Exception exception) Parameters Type Name Description String categoryName LogLevel logLevel EventId eventId Exception exception Returns Type Description Boolean Implements ILogEventFilter"
  },
  "api/Sentry.Extensibility.html": {
    "href": "api/Sentry.Extensibility.html",
    "title": "Namespace Sentry.Extensibility | Sentry .NET",
    "keywords": "Namespace Sentry.Extensibility Classes DisabledHub HubAdapter An implementation of IHub which forwards any call to SentrySdk SentryEventExceptionProcessor<TException> Process an exception type and augments the event with its data Interfaces IBackgroundWorker IDiagnosticLogger ISentryEventExceptionProcessor Process exceptions and augments the event with its data ISentryEventProcessor Process a SentryEvent during the prepare phase. ITransport An abstraction to the transport of the event"
  },
  "api/Sentry.Extensibility.SentryEventExceptionProcessor-1.html": {
    "href": "api/Sentry.Extensibility.SentryEventExceptionProcessor-1.html",
    "title": "Class SentryEventExceptionProcessor<TException> | Sentry .NET",
    "keywords": "Class SentryEventExceptionProcessor<TException> Process an exception type and augments the event with its data Inheritance Object SentryEventExceptionProcessor<TException> Implements ISentryEventExceptionProcessor Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public abstract class SentryEventExceptionProcessor<TException> : ISentryEventExceptionProcessor where TException : Exception Type Parameters Name Description TException The type of the exception to process Methods | Improve this Doc View Source Process(Exception, SentryEvent) Process the exception and augments the event with its data. Declaration public void Process(Exception exception, SentryEvent sentryEvent) Parameters Type Name Description Exception exception The exception to process. Sentry.SentryEvent sentryEvent The event to add data to. | Improve this Doc View Source ProcessException(TException, SentryEvent) Process the exception and event. Declaration protected abstract void ProcessException(TException exception, SentryEvent sentryEvent) Parameters Type Name Description TException exception The exception to process. Sentry.SentryEvent sentryEvent The event to process. Implements ISentryEventExceptionProcessor"
  },
  "api/Sentry.Extensibility.ISentryEventProcessor.html": {
    "href": "api/Sentry.Extensibility.ISentryEventProcessor.html",
    "title": "Interface ISentryEventProcessor | Sentry .NET",
    "keywords": "Interface ISentryEventProcessor Process a SentryEvent during the prepare phase. Namespace : Sentry.Extensibility Assembly : Sentry.dll Syntax public interface ISentryEventProcessor Methods | Improve this Doc View Source Process(SentryEvent) Process the Sentry.SentryEvent Declaration SentryEvent Process(SentryEvent event) Parameters Type Name Description Sentry.SentryEvent event The event to process Returns Type Description Sentry.SentryEvent Remarks The event returned can be the same instance received or a new one. Returning null will stop the processing pipeline. Meaning the event should no longer be processed nor send."
  },
  "api/Sentry.html": {
    "href": "api/Sentry.html",
    "title": "Namespace Sentry | Sentry .NET",
    "keywords": "Namespace Sentry Classes DsnAttribute A way to configure the DSN via attribute defined at the entry-assembly SentryClient Sentry client used to send events to Sentry SentryOptions Sentry SDK options SentrySdk Sentry SDK entrypoint Interfaces IHub SDK API contract which combines a client and scope management ISentryClient Sentry Client interface ISentryScopeManager Scope management"
  },
  "api/Sentry.SentrySdk.html": {
    "href": "api/Sentry.SentrySdk.html",
    "title": "Class SentrySdk | Sentry .NET",
    "keywords": "Class SentrySdk Sentry SDK entrypoint Inheritance Object SentrySdk Inherited Members Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry Assembly : Sentry.dll Syntax public static class SentrySdk Remarks This is a façade to the SDK instance. It allows safe static access to a client and scope management. When the SDK is uninitialized, calls to this class result in no-op so no callbacks are invoked. Properties | Improve this Doc View Source IsEnabled Whether the SDK is enabled or not Declaration public static bool IsEnabled { get; } Property Value Type Description Boolean Methods | Improve this Doc View Source AddBreadcrumb(String, String, String, IDictionary<String, String>, BreadcrumbLevel) Adds a breadcrumb to the current Scope Declaration public static void AddBreadcrumb(string message, string category = null, string type = null, IDictionary<string, string> data = null, BreadcrumbLevel level = BreadcrumbLevel.Info) Parameters Type Name Description String message If a message is provided it’s rendered as text and the whitespace is preserved. Very long text might be abbreviated in the UI. String category Categories are dotted strings that indicate what the crumb is or where it comes from. Typically it’s a module name or a descriptive string. For instance ui.click could be used to indicate that a click happened in the UI or flask could be used to indicate that the event originated in the Flask framework. String type The type of breadcrumb. The default type is default which indicates no specific handling. Other types are currently http for HTTP requests and navigation for navigation events. https://docs.sentry.io/clientdev/interfaces/breadcrumbs/#breadcrumb-types IDictionary < String , String > data Data associated with this breadcrumb. Contains a sub-object whose contents depend on the breadcrumb type. Additional parameters that are unsupported by the type are rendered as a key/value table. Sentry.Protocol.BreadcrumbLevel level Breadcrumb level. See Also https://docs.sentry.io/clientdev/interfaces/breadcrumbs/ | Improve this Doc View Source BindClient(ISentryClient) Binds the client to the current scope. Declaration public static void BindClient(ISentryClient client) Parameters Type Name Description ISentryClient client The client. | Improve this Doc View Source CaptureEvent(SentryEvent) Captures the event. Declaration public static Guid CaptureEvent(SentryEvent evt) Parameters Type Name Description Sentry.SentryEvent evt The event. Returns Type Description Guid The Id of the event | Improve this Doc View Source CaptureException(Exception) Captures the exception. Declaration public static Guid CaptureException(Exception exception) Parameters Type Name Description Exception exception The exception. Returns Type Description Guid The Id of the event | Improve this Doc View Source CaptureMessage(String, SentryLevel) Captures the message. Declaration public static Guid CaptureMessage(string message, SentryLevel level = SentryLevel.Info) Parameters Type Name Description String message The message to send. Sentry.Protocol.SentryLevel level The message level. Returns Type Description Guid The Id of the event | Improve this Doc View Source ConfigureScope(Action<Scope>) Configures the scope through the callback. Declaration public static void ConfigureScope(Action<Scope> configureScope) Parameters Type Name Description Action < Sentry.Protocol.Scope > configureScope The configure scope callback. | Improve this Doc View Source ConfigureScopeAsync(Func<Scope, Task>) Configures the scope asynchronously Declaration public static Task ConfigureScopeAsync(Func<Scope, Task> configureScope) Parameters Type Name Description Func < Sentry.Protocol.Scope , Task > configureScope The configure scope callback. Returns Type Description Task The Id of the event | Improve this Doc View Source Init() Initializes the SDK while attempting to locate the DSN Declaration public static IDisposable Init() Returns Type Description IDisposable Remarks If the DSN is not found, the SDK will not change state. | Improve this Doc View Source Init(Dsn) Initializes the SDK with the specified DSN Declaration public static IDisposable Init(Dsn dsn) Parameters Type Name Description Sentry.Dsn dsn The dsn Returns Type Description IDisposable | Improve this Doc View Source Init(Action<SentryOptions>) Initializes the SDK with an optional configuration options callback. Declaration public static IDisposable Init(Action<SentryOptions> configureOptions) Parameters Type Name Description Action < SentryOptions > configureOptions The configure options. Returns Type Description IDisposable | Improve this Doc View Source Init(String) Initializes the SDK with the specified DSN Declaration public static IDisposable Init(string dsn) Parameters Type Name Description String dsn The dsn Returns Type Description IDisposable Remarks An empty string is interpreted as a disabled SDK See Also https://docs.sentry.io/clientdev/overview/#usage-for-end-users | Improve this Doc View Source PushScope() Creates a new scope that will terminate when disposed Declaration public static IDisposable PushScope() Returns Type Description IDisposable A disposable that when disposed, ends the created scope. | Improve this Doc View Source PushScope<TState>(TState) Creates a new scope that will terminate when disposed Declaration public static IDisposable PushScope<TState>(TState state) Parameters Type Name Description TState state A state object to be added to the scope Returns Type Description IDisposable A disposable that when disposed, ends the created scope. Type Parameters Name Description TState Remarks Pushes a new scope while inheriting the current scope's data."
  },
  "api/Sentry.Integrations.html": {
    "href": "api/Sentry.Integrations.html",
    "title": "Namespace Sentry.Integrations | Sentry .NET",
    "keywords": "Namespace Sentry.Integrations Interfaces ISdkIntegration An SDK Integration"
  },
  "api/Sentry.Integrations.ISdkIntegration.html": {
    "href": "api/Sentry.Integrations.ISdkIntegration.html",
    "title": "Interface ISdkIntegration | Sentry .NET",
    "keywords": "Interface ISdkIntegration An SDK Integration Namespace : Sentry.Integrations Assembly : Sentry.dll Syntax public interface ISdkIntegration Methods | Improve this Doc View Source Register(IHub) Registers this integration with the hub. Declaration void Register(IHub hub) Parameters Type Name Description IHub hub The hub. Remarks This method is invoked when the Hub is created. | Improve this Doc View Source Unregister(IHub) Unregisters this integration with the hub Declaration void Unregister(IHub hub) Parameters Type Name Description IHub hub The hub. Remarks This method is invoked when the Hub is disposed."
  },
  "api/Sentry.Extensions.Logging.SentryLoggingOptions.html": {
    "href": "api/Sentry.Extensions.Logging.SentryLoggingOptions.html",
    "title": "Class SentryLoggingOptions | Sentry .NET",
    "keywords": "Class SentryLoggingOptions Sentry logging integration options Inheritance Object SentryOptions SentryLoggingOptions SentryAspNetCoreOptions Implements Sentry.Protocol.IScopeOptions Inherited Members SentryOptions.SendDefaultPii SentryOptions.AttachStacktrace SentryOptions.MaxBreadcrumbs SentryOptions.SampleRate SentryOptions.Release SentryOptions.Environment SentryOptions.BeforeSend SentryOptions.MaxQueueItems SentryOptions.ShutdownTimeout SentryOptions.DecompressionMethods SentryOptions.RequestBodyCompressionLevel SentryOptions.RequestBodyCompressionBuffered SentryOptions.HttpProxy SentryOptions.ConfigureHandler SentryOptions.ConfigureClient SentryOptions.Debug SentryOptions.DiagnosticsLevel SentryOptions.DiagnosticLogger Object.Equals(Object) Object.Equals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Object.ReferenceEquals(Object, Object) Object.ToString() Namespace : Sentry.Extensions.Logging Assembly : Sentry.Extensions.Logging.dll Syntax public class SentryLoggingOptions : SentryOptions, IScopeOptions Properties | Improve this Doc View Source Dsn The DSN which defines where events are sent Declaration public string Dsn { get; set; } Property Value Type Description String | Improve this Doc View Source Filters Event filters Declaration public IReadOnlyCollection<ILogEventFilter> Filters { get; set; } Property Value Type Description IReadOnlyCollection < ILogEventFilter > | Improve this Doc View Source InitializeSdk Whether to initialize this SDK through this integration Declaration public bool InitializeSdk { get; set; } Property Value Type Description Boolean | Improve this Doc View Source MinimumBreadcrumbLevel Gets or sets the minimum breadcrumb level. Declaration public LogLevel MinimumBreadcrumbLevel { get; set; } Property Value Type Description LogLevel The minimum breadcrumb level. Remarks Events with this level or higher will be stored as Sentry.Protocol.Breadcrumb | Improve this Doc View Source MinimumEventLevel Gets or sets the minimum event level. Declaration public LogLevel MinimumEventLevel { get; set; } Property Value Type Description LogLevel The minimum event level. Remarks Events with this level or higher will be sent to Sentry Implements Sentry.Protocol.IScopeOptions"
  }
}